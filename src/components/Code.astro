---
import { Code } from 'astro:components'

const allDemos = await import.meta.glob('/src/components/demoes/*.astro', {
  eager: true,
  query: '?raw',
  import: 'default',
})

const { component } = Astro.props

// Find the matching demo by comparing the full file path
const demoPath = Object.keys(allDemos).find((path) =>
  path.endsWith(component.file.split('/').pop())
)

if (!demoPath) {
  throw new Error(`Source file not found: ${component.file}`)
}

const sourceCode = allDemos[demoPath]

function extractSections(code) {
  // Remove frontmatter first
  const frontmatterMatch = code.match(/^---\n([\s\S]*?)\n---/)
  let codeWithoutFrontmatter = code
  if (frontmatterMatch) {
    codeWithoutFrontmatter = code.replace(/^---\n[\s\S]*?\n---\n/, '')
  }

  const styleMatch = codeWithoutFrontmatter.match(/<style>([\s\S]*?)<\/style>/)
  const scriptMatch = codeWithoutFrontmatter.match(/<script[^>]*>([\s\S]*?)<\/script>/)

  let markup = codeWithoutFrontmatter
    .replace(/<style>[\s\S]*?<\/style>/, '')
    .replace(/<script[^>]*>[\s\S]*?<\/script>/, '')
    .trim()

  // Function to remove common indentation from a code block
  const removeIndentation = (str) => {
    if (!str) return ''
    const lines = str.split('\n')
    // Find the minimum indentation level (excluding empty lines)
    const minIndent = Math.min(
      ...lines.filter((line) => line.trim()).map((line) => line.match(/^\s*/)[0].length)
    )
    // Remove that amount of indentation from each line
    return lines
      .map((line) => line.slice(minIndent))
      .join('\n')
      .trim()
  }

  return {
    markup,
    style: styleMatch ? removeIndentation(styleMatch[1]) : '',
    script: scriptMatch ? removeIndentation(scriptMatch[1]) : '',
  }
}

const { markup, style, script } = extractSections(sourceCode)
---

{
  markup && (
    <div class="code-block">
      <h3>Markup</h3>
      <Code code={markup} theme="github-dark" lang="html" wrap />
    </div>
  )
}

{
  style && (
    <div class="code-block">
      <h3>Styles</h3>
      <Code code={style} theme="github-dark" lang="css" wrap />
    </div>
  )
}

{
  script && (
    <div class="code-block">
      <h3>Script</h3>
      <Code code={script} theme="github-dark" lang="javascript" wrap />
    </div>
  )
}

<style>
  .code-block {
    margin-block: var(--space-xxl);
    position: relative;
  }

  h3 {
    position: absolute;
    top: -1ch;
    right: 1ch;
    line-height: 1;
    color: var(--color-accent);
  }
</style>
